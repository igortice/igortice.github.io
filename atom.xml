<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Blog Igor Rocha</title>
 <link href="igortice.github.io/atom.xml" rel="self"/>
 <link href="igortice.github.io/"/>
 <updated>2015-06-04T23:09:00-03:00</updated>
 <id>igortice.github.io</id>
 <author>
   <name>Igor Rocha</name>
   <email>igortice@gmail.com</email>
 </author>

 
 <entry>
   <title>Configurar Jekyll e AngularJS</title>
   <link href="igortice.github.io/angular/configurar-jekyll-angular.html"/>
   <updated>2015-06-04T00:00:00-03:00</updated>
   <id>igortice.github.io/angular/configurar-jekyll-angular</id>
   <content type="html">&lt;p&gt;Neste Post vamos aprender como configurar o &lt;strong&gt;AngularJS&lt;/strong&gt; para que ele funcione de forma correta com o &lt;strong&gt;Jekyll&lt;/strong&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Se você usa o &lt;strong&gt;Jekyll&lt;/strong&gt; para criar seus sites estáticos, vai perceber que ele usa o
&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot; target=&quot;_blank&quot;&gt;Liquid&lt;/a&gt; como template engine para processar suas páginas.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    {{ post.title }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.date | date: &quot;%d/%m/%Y&quot; }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;O código acima serve, por exemplo, para mostrar o título e a data de publicação deste post que você está lendo.&lt;/p&gt;

&lt;p&gt;Perceba que quem está fazendo todo processo de manipulação das variáveis é o template engine do &lt;a href=&quot;#&quot;&gt;Liquid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se eu tentar usar o &lt;strong&gt;AngularJS&lt;/strong&gt; para processar algo dentro do &lt;strong&gt;Jekyll&lt;/strong&gt; teremos um problema, pois o &lt;a href=&quot;#&quot;&gt;Liquid&lt;/a&gt;
utiliza o interpolador &lt;code&gt;{{ }}&lt;/code&gt; para fazer seu processamento, o mesmo do &lt;strong&gt;AngularJS&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Então se eu tentar fazer uso deste interpolador com o &lt;strong&gt;AngularJS&lt;/strong&gt; no &lt;strong&gt;Jekyll&lt;/strong&gt; , nada deve acontecer. Veja o exemplo
abaixo no qual estou tentando mostrar o nome digitado no input:&lt;/p&gt;

&lt;section class=&quot;codepen-demo&quot;&gt;
  &lt;ul class=&quot;tabs&quot; data-tab&gt;
    &lt;li class=&quot;tab-title active&quot;&gt;&lt;a href=&quot;#panel1&quot;&gt;Código&lt;/a&gt;&lt;/li&gt;
    &lt;li class=&quot;tab-title&quot;&gt;&lt;a href=&quot;#panel2&quot;&gt;Resultado&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;div class=&quot;tabs-content&quot;&gt;
    &lt;div class=&quot;content active&quot; id=&quot;panel1&quot;&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;Digite seu nome: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nome&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-show=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nome&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  Olá {{ nome }}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
    &lt;div class=&quot;content&quot; id=&quot;panel2&quot;&gt;
      Digite seu nome: &lt;input ng-model=&quot;nome&quot;&gt;

      &lt;h1 ng-show=&quot;nome&quot;&gt;
        Olá {{ nome }}
      &lt;/h1&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;

&lt;p&gt;Perceba no resultado acima que não conseguimos fazer com que o &lt;strong&gt;AngularJS&lt;/strong&gt; renderize a variável
&lt;code&gt;{{ nome }}&lt;/code&gt; devido ao interpolador.&lt;/p&gt;

&lt;p&gt;Então, para podermos trabalhar com o &lt;strong&gt;AngularJS&lt;/strong&gt; de forma correta, vamos mudar o seu interpolador para ser diferente
do interpolador do &lt;a href=&quot;#&quot;&gt;Liquid&lt;/a&gt;. Para isso, crie um arquivo chamado &lt;em&gt;config.js&lt;/em&gt;, adicone o trecho de
código abaixo no seu conteúdo e importe esse arquivo no seu projeto.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// config.js&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;use strict&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;app&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Atenção coloque aqui o modulo da sua aplicação&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$inject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;$interpolateProvider&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$interpolateProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$interpolateProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;[[&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// mudar {{ para [[&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$interpolateProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endSymbol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;]]&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// mudar }} por isso ]]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}());&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Perceba que nós mudamos o interpolador que o &lt;strong&gt;AngularJS&lt;/strong&gt; vai usar para fazer o processamento das páginas com suas
variáveis. Agora, para o nosso código anterior em &lt;strong&gt;AngularJS&lt;/strong&gt; funcionar, basta mudarmos o seu interpolador.
Veja como ficou nosso exemplo:&lt;/p&gt;

&lt;section class=&quot;codepen-demo&quot;&gt;
  &lt;ul class=&quot;tabs&quot; data-tab&gt;
    &lt;li class=&quot;tab-title active&quot;&gt;&lt;a href=&quot;#panel1&quot;&gt;Código&lt;/a&gt;&lt;/li&gt;
    &lt;li class=&quot;tab-title&quot;&gt;&lt;a href=&quot;#panel2&quot;&gt;Resultado&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;div class=&quot;tabs-content&quot;&gt;
    &lt;div class=&quot;content active&quot; id=&quot;panel1&quot;&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;Digite seu nome: &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nome&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-show=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nome&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  Olá [[ nome ]]
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
    &lt;div class=&quot;content&quot; id=&quot;panel2&quot;&gt;
      Digite seu nome: &lt;input ng-model=&quot;nome&quot;&gt;

      &lt;h1 ng-show=&quot;nome&quot;&gt;
        Olá {[ nome ]}
      &lt;/h1&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/section&gt;
</content>
 </entry>
 

</feed>
